<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Coin2Flow - Add Member</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
  <style>
    body {
      margin: 0;
      font-family: 'Poppins', sans-serif;
      background: #121212;
      color: #e0e0e0;
    }

    .outer-wrapper {
      max-width: 1300px;
      margin: auto;
      padding: 2rem;
    }

    header {
      background-color: #1f1f1f;
      padding: 1rem 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
      border-bottom: 2px solid #f3ca20;
    }

    header h1 {
      color: #f3ca20;
      font-size: 1.8rem;
    }

    nav a {
      color: #ccc;
      margin-left: 1.5rem;
      text-decoration: none;
      font-weight: 600;
    }

    nav a:hover {
      color: #f3ca20;
    }

    .form-section, .members-section {
      background-color: #1e1e1e;
      border-radius: 10px;
      padding: 2rem;
      margin-bottom: 2rem;
      box-shadow: 0 0 10px #000;
    }

    .form-section h2, .members-section h2 {
      color: #f3ca20;
      margin-bottom: 1rem;
    }

    form {
      display: flex;
      flex-wrap: wrap;
      gap: 1.2rem;
      justify-content: space-between;
    }

    form label {
      width: 100%;
      font-weight: 600;
    }

    form input {
      width: 100%;
      padding: 0.6rem;
      border: 1px solid #555;
      border-radius: 5px;
      background: #181818;
      color: white;
    }

    form > * {
      flex: 1 1 calc(50% - 1rem);
      min-width: 220px;
    }

    .submit-btn {
      flex: 1 1 100%;
      padding: 0.8rem;
      background: #f3ca20;
      border: none;
      border-radius: 5px;
      font-weight: bold;
      color: #121212;
      cursor: pointer;
      margin-top: 1rem;
    }

    .submit-btn:hover {
      background: #ffd93b;
    }

    .member-block {
      display: flex;
      flex-direction: column;
      background: #292929;
      margin-bottom: 1rem;
      padding: 1rem;
      border-radius: 10px;
      box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
    }

    .member-header {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .member-header img {
      width: 70px;
      height: 70px;
      border-radius: 50%;
      object-fit: cover;
    }

    .member-info {
      flex-grow: 1;
    }

    .member-info h3 {
      margin: 0;
      font-size: 1.2rem;
    }

    .member-info p {
      margin: 0.3rem 0;
      color: #ccc;
    }

    .toggle-weeks {
      margin-top: 0.5rem;
      cursor: pointer;
      font-size: 0.9rem;
      color: #6cc6f0;
    }

    .week-payments {
      display: none;
      margin-top: 1rem;
      padding-left: 1rem;
      border-left: 2px solid #f3ca20;
    }

    .member-actions {
      display: flex;
      justify-content: flex-end;
      margin-top: 1rem;
    }

    .member-actions button {
      margin-right: 10px;
      padding: 0.4rem 1rem;
      background-color: #3a3a3a;
      border: none;
      border-radius: 5px;
      color: #fff;
      cursor: pointer;
    }

    .member-actions .edit-btn {
      background-color: #2f80ed;
    }

    .member-actions .delete-btn {
      background-color: #e74c3c;
    }

    .member-actions button:hover {
      opacity: 0.9;
    }

    .search-box {
      margin-bottom: 1rem;
      text-align: right;
    }

    .search-box input {
      padding: 0.5rem;
      border-radius: 5px;
      border: 1px solid #444;
      background: #121212;
      color: #fff;
    }

    .pagination {
      text-align: center;
      margin-top: 1rem;
    }

    .pagination button {
      margin: 0 5px;
      padding: 6px 12px;
      border-radius: 4px;
      border: none;
      background: #333;
      color: #fff;
      cursor: pointer;
    }

    .pagination button.active {
      background: #f3ca20;
      color: #121212;
    }

    #preview-avatar {
      width: 70px;
      height: 70px;
      border-radius: 50%;
      object-fit: cover;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <header>
    <h1><i class="fa-solid fa-building-columns"></i> Coin2Flow</h1>
    <nav>
      <a href="/">Home</a>
      <a href="/add-member">Add Member</a>
      <a href="/manage-funds">Manage Funds</a>
    </nav>
  </header>

  <div class="outer-wrapper">
    <div class="form-section">
      <h2>Add New Member</h2>
      <form id="memberForm" action="/add-member" method="POST" enctype="multipart/form-data">
        <label>Name</label>
        <input type="text" name="name" placeholder="Full Name" required />

        <label>CID</label>
        <input type="text" name="cid" placeholder="City ID" required />

        <label>Discord ID</label>
        <input type="text" name="discordId" placeholder="123456789" required />

        <label>Phone</label>
        <input type="tel" name="phone" placeholder="e.g., 9876543210" required />

        <label>Initial Deposit</label>
        <input type="number" name="initialAmount" placeholder="₹ 5000" required />

        <label>Weekly Fund</label>
        <input type="number" name="weeklyFund" placeholder="₹ 500" required />

        <label>Profile Picture</label>
        <input type="file" name="avatar" accept="image/*" onchange="previewAvatar(event)" />
        <img id="preview-avatar" src="https://cdn.discordapp.com/embed/avatars/0.png" alt="Preview" />

        <button type="submit" class="submit-btn">Add Member</button>
      </form>
    </div>

    <div class="search-box">
      <input type="text" id="searchInput" placeholder="Search members..." />
    </div>

    <div class="members-section">
      <h2>Members</h2>
      <div id="membersContainer"></div>
      <div class="pagination" id="paginationBar"></div>
    </div>
  </div>

  <script>
    const membersContainer = document.getElementById('membersContainer');
    const searchInput = document.getElementById('searchInput');
    const paginationBar = document.getElementById('paginationBar');
    let currentPage = 1;
    const membersPerPage = 5;
    let allMembers = [];

    async function fetchMembers() {
      const res = await fetch('/get-summary');
      const data = await res.json();
      allMembers = data;
      renderMembers();
    }

    function renderMembers() {
      membersContainer.innerHTML = '';
      const searchTerm = searchInput.value.toLowerCase();
      const filtered = allMembers.filter(m =>
        m.name.toLowerCase().includes(searchTerm) ||
        m.cid.toLowerCase().includes(searchTerm) ||
        m.phone.includes(searchTerm)
      );

      const start = (currentPage - 1) * membersPerPage;
      const end = start + membersPerPage;
      const paginated = filtered.slice(start, end);

      paginated.forEach(member => {
        const div = document.createElement('div');
        div.className = 'member-block';
       div.innerHTML = `
  <div class="member-header">
    <img src="${member.avatarUrl || 'https://cdn.discordapp.com/embed/avatars/0.png'}" alt="Avatar" />
    <div class="member-info">
      <h3><i class="fa-solid fa-user"></i> ${member.name} (${member.cid})</h3>
      <p><i class="fa-solid fa-phone"></i> ${member.phone}</p>
      <p><i class="fa-brands fa-discord"></i> ${member.discordId || '<span style="color:red">Null</span>'}</p>
      <p><i class="fa-solid fa-coins"></i> Initial: ₹${member.initialAmount}, Weekly: ₹${member.weeklyFund}</p>
      <span class="toggle-weeks" onclick="toggleWeeks(this)" data-discord-id="${member.discordId}">+ Show Weekly Payments</span>
      <div class="week-payments"></div>
    </div>
  </div>
  <div class="member-actions">
    <button class="edit-btn" onclick="window.location.href='/edit-member/${member.id}'">Edit</button>
    <button class="delete-btn" onclick="deleteMember(${member.id})">Delete</button>
  </div>
`;

        membersContainer.appendChild(div);
      });

      renderPagination(filtered.length);
    }

    function renderPagination(total) {
      paginationBar.innerHTML = '';
      const pages = Math.ceil(total / membersPerPage);

      const prevBtn = document.createElement('button');
      prevBtn.textContent = 'Prev';
      prevBtn.disabled = currentPage === 1;
      prevBtn.onclick = () => {
        if (currentPage > 1) {
          currentPage--;
          renderMembers();
        }
      };
      paginationBar.appendChild(prevBtn);

      for (let i = 1; i <= pages; i++) {
        const btn = document.createElement('button');
        btn.textContent = i;
        btn.className = i === currentPage ? 'active' : '';
        btn.onclick = () => {
          currentPage = i;
          renderMembers();
        };
        paginationBar.appendChild(btn);
      }

      const nextBtn = document.createElement('button');
      nextBtn.textContent = 'Next';
      nextBtn.disabled = currentPage === pages;
      nextBtn.onclick = () => {
        if (currentPage < pages) {
          currentPage++;
          renderMembers();
        }
      };
      paginationBar.appendChild(nextBtn);
    }

    function previewAvatar(event) {
      const file = event.target.files[0];
      if (file) {
        document.getElementById('preview-avatar').src = URL.createObjectURL(file);
      }
    }

    async function deleteMember(id) {
      if (!confirm("Delete this member?")) return;
      const res = await fetch(`/delete-member/${id}`, { method: 'DELETE' });
      const result = await res.json();
      if (result.success) fetchMembers();
      else alert("Error deleting member.");
    }

  async function toggleWeeks(el) {
  const discordId = el.getAttribute("data-discord-id");
  const container = el.nextElementSibling;

  if (container.style.display === 'block') {
    container.style.display = 'none';
    el.innerText = '+ Show Weekly Payments';
  } else {
    // Fetch weekly payment data from backend
    try {
      const res = await fetch(`/get-weekly-payments/${discordId}`);
      const data = await res.json();

      if (data && data.length > 0) {
        container.innerHTML = data.map(entry => `
          <p><strong>${entry.weekNumber}:</strong> ₹${entry.weekAmount}</p>
        `).join('');
      } else {
        container.innerHTML = '<p style="color: gray;">No weekly payments available.</p>';
      }

      container.style.display = 'block';
      el.innerText = '- Hide Weekly Payments';
    } catch (err) {
      console.error("Error fetching weekly payments:", err);
      container.innerHTML = '<p style="color: red;">Failed to load payments.</p>';
      container.style.display = 'block';
    }
  }
}


    fetchMembers();
  </script>
</body>
</html>
